var search_data = {"index":{"searchIndex":["alimento","lista","object","p6","error","plato","plato_heredada","<=>()","<=>()","<=>()","each()","erase_element_head()","erase_element_tail()","expc_gei()","expc_m2t()","huella_nutricional()","imp_amb()","insert_all_elements_head()","insert_all_elements_tail()","insert_element_head()","insert_element_tail()","new()","new()","new()","new()","por_h_carb()","por_lipid()","por_prot()","precio()","t_gei()","t_terreno()","to_s()","to_s()","to_s()","to_s()","v_energ()","vct()","gemfile","gemfile.lock","guardfile","license","readme","rakefile","setup","p6.gemspec"],"longSearchIndex":["alimento","lista","object","p6","p6::error","plato","plato_heredada","alimento#<=>()","plato#<=>()","plato_heredada#<=>()","lista#each()","lista#erase_element_head()","lista#erase_element_tail()","lista#expc_gei()","lista#expc_m2t()","plato#huella_nutricional()","alimento#imp_amb()","lista#insert_all_elements_head()","lista#insert_all_elements_tail()","lista#insert_element_head()","lista#insert_element_tail()","alimento::new()","lista::new()","plato::new()","plato_heredada::new()","plato#por_h_carb()","plato#por_lipid()","plato#por_prot()","object#precio()","plato_heredada#t_gei()","plato_heredada#t_terreno()","alimento#to_s()","lista#to_s()","plato#to_s()","plato_heredada#to_s()","alimento#v_energ()","plato#vct()","","","","","","","",""],"info":[["Alimento","","Alimento.html","","<p>Clase alimento donde se define cada alimento y sus propiedades\n<p>Autor &mdash; Carlos Díaz Calzadilla\n\n"],["Lista","","Lista.html","","<p>Lista que va a contener un conjutno de alimentos\n"],["Object","","Object.html","",""],["P6","","P6.html","",""],["P6::Error","","P6/Error.html","",""],["Plato","","Plato.html","","<p>Clase Plato donde se define cada plato, sus alimentos y cantidades\n<p>Autor &mdash; Carlos Díaz Calzadilla\n\n"],["Plato_heredada","","Plato_heredada.html","","<p>Clase Plato_heredada, esta hereda de la cclase Plato\n"],["<=>","Alimento","Alimento.html#method-i-3C-3D-3E","(otro_alimento)","<p>Comparable\n<p>Permite hacer comparaciones &lt;=,&gt;=,==,between,clamp\n"],["<=>","Plato","Plato.html#method-i-3C-3D-3E","(otro_plato)","<p>Comparable\n<p>Permite que los alimentos se comparen por el valor calórico total\n"],["<=>","Plato_heredada","Plato_heredada.html#method-i-3C-3D-3E","(otro_plato)","<p>Comparable\n<p>Permite comparar respecto a la huella nutricional\n"],["each","Lista","Lista.html#method-i-each","()","<p>Recorrido de la lista (each)\n<p>Recorrer la lista\n"],["erase_element_head","Lista","Lista.html#method-i-erase_element_head","()","<p>Eliminar un elemento cabeza (erase_element_head)\n<p>Permite eliminar un valor al principio de la lista\n"],["erase_element_tail","Lista","Lista.html#method-i-erase_element_tail","()","<p>Eliminar un elemento cola (erase_element_tail)\n<p>Permite eliminar un valor al final de la lista\n"],["expc_gei","Lista","Lista.html#method-i-expc_gei","(n_dias)","<p>Expectativa gei (excp_gei)\n<p>Permite obtener la expectativa de gei segú el número de dias\n"],["expc_m2t","Lista","Lista.html#method-i-expc_m2t","()","<p>Expectativa terreno (excp_m2t)\n<p>Permite obtener la expectativa de terreno\n"],["huella_nutricional","Plato","Plato.html#method-i-huella_nutricional","()","<p>Obtención de huella nutricional (huella_nutricional)\n<p>Devuelve el valor de la huella nutricional\n"],["imp_amb","Alimento","Alimento.html#method-i-imp_amb","( arry_gei , arry_terreno , cantidad)","<p>Impacto ambiental (imp_amb)\n<p>Se obtiene el impacto\n"],["insert_all_elements_head","Lista","Lista.html#method-i-insert_all_elements_head","(array)","<p>Insertar varios elementos cabeza (insert_all_elements_head)\n<p>Permite insertar varios valores al inicio …\n"],["insert_all_elements_tail","Lista","Lista.html#method-i-insert_all_elements_tail","(array)","<p>Insertar varios elementos cola (insert_all_element_tail)\n<p>Permite insertar varios elementos al final de …\n"],["insert_element_head","Lista","Lista.html#method-i-insert_element_head","( valor )","<p>Insertar un elemento cabeza (insert_element_head)\n<p>Permite insertar un valor al comienzo de la lista\n"],["insert_element_tail","Lista","Lista.html#method-i-insert_element_tail","( valor )","<p>Insertar un elemento cola (insert_element_tail)\n<p>Permite insertar un valor al final de la lista\n"],["new","Alimento","Alimento.html#method-c-new","(nom , prot , carbohid , lip , ge , ter)","<p>Inicializar (initialize)\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Inicializa</span> <span class=\"ruby-identifier\">el</span> <span class=\"ruby-identifier\">alimento</span> <span class=\"ruby-identifier\">con</span> <span class=\"ruby-identifier\">los</span> <span class=\"ruby-identifier\">argumentos</span> <span class=\"ruby-identifier\">necesarios</span>\n</pre>\n"],["new","Lista","Lista.html#method-c-new","(head, tail)","<p>Inicializar (initialize)\n<p>Inicializa la lista con la cabeza y cola\n"],["new","Plato","Plato.html#method-c-new","(nombre, conjunto_alimento, conjunto_cantidad)","<p>Inicializar (initialize)\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Inicializa</span> <span class=\"ruby-identifier\">el</span> <span class=\"ruby-identifier\">plato</span> <span class=\"ruby-identifier\">con</span> <span class=\"ruby-identifier\">los</span> <span class=\"ruby-identifier\">argumentos</span> <span class=\"ruby-identifier\">necesarios</span>\n</pre>\n"],["new","Plato_heredada","Plato_heredada.html#method-c-new","(nombre, conj_alimen , conj_canti)","<p>Inicializar (initialize)\n<p>Inicializa con el initialize de la clase padre\n"],["por_h_carb","Plato","Plato.html#method-i-por_h_carb","()","<p>Porcentaje de hidratos de carbono (por_h_carb)\n<p>Devuelve el valor del porcentaje de hidratos de carbno …\n"],["por_lipid","Plato","Plato.html#method-i-por_lipid","()","<p>Procentaje de lípidos (por_lipid)\n<p>Devuelve el valor del porcentaje de los lípidos\n"],["por_prot","Plato","Plato.html#method-i-por_prot","()","<p>Porcentaje proteínas (por_prot)\n<p>Devuelve el porcentaje de proteínas\n"],["precio","Object","Object.html#method-i-precio","(menu , precios)",""],["t_gei","Plato_heredada","Plato_heredada.html#method-i-t_gei","()",""],["t_terreno","Plato_heredada","Plato_heredada.html#method-i-t_terreno","()","<p>Cantidad de terreno (t_terreno)\n<p>Devuelve la cantidad de terreno del plato\n"],["to_s","Alimento","Alimento.html#method-i-to_s","()","<p>Formateo (to_s)\n<p>Formatea el alimento\n"],["to_s","Lista","Lista.html#method-i-to_s","()","<p>Formateo (to_s)\n<p>Formateo de la lista\n"],["to_s","Plato","Plato.html#method-i-to_s","()","<p>Formateo (to_s)\n<p>Devuelve el plato formateado\n"],["to_s","Plato_heredada","Plato_heredada.html#method-i-to_s","()","<p>Formateo (to_s)\n<p>Devuelve el plato formateado\n"],["v_energ","Alimento","Alimento.html#method-i-v_energ","()","<p>Valor energético (v_energ)\n<p>Devuelve el valor energético del alimento\n"],["vct","Plato","Plato.html#method-i-vct","()","<p>Valor calórico total (vct)\n<p>Devuelve el valor calórico total\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in p6.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  p6 (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2019 Carlos Díaz\n<p>Permission is hereby granted, free of charge, to any …\n"],["README","","README_md.html","","<p>Practica 8: Herencia y módulos usando TDD\n<p>Autor: Carlos Díaz Calzadilla | alu0101102726@ull.edu.es\n<p>Objetivo …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["p6.gemspec","","p6_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"]]}}